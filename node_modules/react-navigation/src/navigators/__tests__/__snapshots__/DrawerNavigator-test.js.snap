// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DrawerNavigator renders successfully 1`] = `
<View
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    Object {
      "backgroundColor": "transparent",
      "flex": 1,
    }
  }
>
  <View
    collapsable={undefined}
    style={
      Object {
        "flex": 1,
        "zIndex": 0,
      }
    }
  />
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    pointerEvents="none"
    style={
      Object {
        "backgroundColor": "#000",
        "bottom": 0,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "zIndex": 1000,
      }
    }
    testID={undefined}
  />
  <View
    accessibilityViewIsModal={false}
    collapsable={undefined}
    style={
      Object {
        "backgroundColor": "white",
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": null,
        "top": 0,
        "transform": Array [
          Object {
            "translateX": -320,
          },
        ],
        "width": 320,
        "zIndex": 1001,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <RCTScrollView
        DEPRECATED_sendUpdatedChildFrames={false}
        alwaysBounceHorizontal={undefined}
        alwaysBounceVertical={false}
        onContentSizeChange={null}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onResponderGrant={[Function]}
        onResponderReject={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={undefined}
        onResponderTerminationRequest={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        onScrollShouldSetResponder={[Function]}
        onStartShouldSetResponder={[Function]}
        onStartShouldSetResponderCapture={[Function]}
        onTouchCancel={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        scrollEventThrottle={undefined}
        sendMomentumEvents={false}
        style={
          Array [
            Object {
              "flexDirection": "column",
              "flexGrow": 1,
              "flexShrink": 1,
              "overflow": "scroll",
            },
            undefined,
          ]
        }
      >
        <RCTScrollContentView
          collapsable={false}
          removeClippedSubviews={undefined}
          style={
            Array [
              undefined,
              undefined,
            ]
          }
        >
          <View
            collapsable={undefined}
            onLayout={[Function]}
            pointerEvents="box-none"
            style={
              Object {
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 20,
              }
            }
          >
            <View
              style={
                Array [
                  Object {
                    "paddingVertical": 4,
                  },
                  undefined,
                ]
              }
            >
              <View
                accessibilityComponentType={undefined}
                accessibilityLabel={undefined}
                accessibilityTraits={undefined}
                accessible={true}
                collapsable={undefined}
                hasTVPreferredFocus={undefined}
                hitSlop={undefined}
                isTVSelectable={true}
                nativeID={undefined}
                onLayout={undefined}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "opacity": 1,
                  }
                }
                testID={undefined}
                tvParallaxProperties={undefined}
              >
                <View
                  collapsable={undefined}
                  onLayout={[Function]}
                  pointerEvents="box-none"
                  style={
                    Object {
                      "backgroundColor": "rgba(0, 0, 0, .04)",
                      "paddingBottom": 0,
                      "paddingLeft": 0,
                      "paddingRight": 0,
                      "paddingTop": 0,
                    }
                  }
                >
                  <View
                    style={
                      Array [
                        Object {
                          "alignItems": "center",
                          "flexDirection": "row",
                        },
                        undefined,
                      ]
                    }
                  >
                    <Text
                      accessible={true}
                      allowFontScaling={true}
                      ellipsizeMode="tail"
                      style={
                        Array [
                          Object {
                            "fontWeight": "bold",
                            "margin": 16,
                          },
                          Object {
                            "color": "#2196f3",
                          },
                          undefined,
                          undefined,
                        ]
                      }
                    >
                      Welcome anonymous
                    </Text>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </RCTScrollContentView>
      </RCTScrollView>
    </View>
  </View>
</View>
`;
